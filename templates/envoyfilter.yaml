{{- $numNodes := (index $.Values "redis-cluster").cluster.nodes | int }}
{{- if gt $numNodes 0 -}}
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: test-redis-cluster-with-istio
spec:
  workloadSelector:
    labels:
      run: redis-client
  configPatches:
  - applyTo: CLUSTER
    patch:
      operation: INSERT_FIRST
      value:
        name: "test-redis-cluster-with-istio"
        connect_timeout: 3s
        lb_policy: CLUSTER_PROVIDED  # Use Redis Cluster's builtin partitioning scheme
        load_assignment:
          cluster_name: test-redis-cluster-with-istio
          endpoints:
          - lb_endpoints:
{{- range $i, $e := until $numNodes }}
            - endpoint:
                address:
                  socket_address:
                    address: redis-cluster-{{ $i }}.redis-cluster-headless.{{ $.Release.Namespace }}.svc.cluster.local
                    port_value: 6379
{{- end }}
        cluster_type:
          name: envoy.clusters.redis
          typed_config:
            "@type": type.googleapis.com/google.protobuf.Struct
            value:
              cluster_refresh_rate: 5s
              cluster_refresh_timeout: 3s
              redirect_refresh_interval: 5s
              redirect_refresh_threshold: 5
        typed_extension_protocol_options:
          envoy.filters.network.redis_proxy:
            "@type": type.googleapis.com/envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions
            auth_password:
              inline_string: secret
{{- end -}}
